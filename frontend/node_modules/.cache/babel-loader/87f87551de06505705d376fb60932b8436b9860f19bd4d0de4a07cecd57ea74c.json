{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/authtask/frontend/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../assets/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const loginUser = async () => {\n    try {\n      // Clear previous messages\n      setErrorMessage('');\n      setSuccessMessage('');\n      const response = await fetch('http://localhost:8002/api/auth/login', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          // This field can contain either email or username\n          password\n        })\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        localStorage.setItem('user', JSON.stringify(responseData.user));\n        localStorage.setItem('token', responseData.token);\n\n        // Redirect based on role\n        const destination = responseData.user.role === 'admin' ? '/admin/dashboard' : '/';\n        navigate(destination);\n      } else {\n        setErrorMessage(responseData.message || 'Login failed. Please check your credentials.');\n      }\n    } catch (error) {\n      setErrorMessage('Cannot connect to server. Please try again later.');\n    }\n  };\n\n  // const loginUser = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:8002/api/auth/login', {\n  //       method: 'POST',\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       },\n  //       body: JSON.stringify({ email, password }),\n  //     });\n\n  //     const responseData = await response.json();\n\n  //     if (response.ok) {\n  //       localStorage.setItem('user', JSON.stringify(responseData));\n  //       setSuccessMessage(\"Login successful!\");\n  //       setErrorMessage('');\n\n  //       // Redirect based on user role\n  //       const { role } = responseData.user;\n  //       navigate(role === 'admin' ? '/admin/dashboard' : '/');\n\n  //     } else {\n  //       // Handle errors from backend\n  //       setErrorMessage(responseData.message || 'Authentication failed');\n  //       setSuccessMessage('');\n  //     }\n  //   } catch (error) {\n  //     setErrorMessage('Network error. Please try again.');\n  //     setSuccessMessage('');\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-login-input-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"form-control inputBox\",\n          placeholder: \"Enter email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"form-control inputBox\",\n          placeholder: \"Enter Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loginUser,\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ei++RZpqaQIxLEhQ/NMlWwHOdcI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","successMessage","setSuccessMessage","errorMessage","setErrorMessage","navigate","loginUser","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","localStorage","setItem","user","token","destination","role","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","required","onClick","to","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../assets/login.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n\n  const loginUser = async () => {\n    try {\n      // Clear previous messages\n      setErrorMessage('');\n      setSuccessMessage('');\n  \n      const response = await fetch('http://localhost:8002/api/auth/login', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ \n          email: email, // This field can contain either email or username\n          password \n        }),\n      });\n  \n      const responseData = await response.json();\n  \n      if (response.ok) {\n        localStorage.setItem('user', JSON.stringify(responseData.user));\n        localStorage.setItem('token', responseData.token);\n        \n        // Redirect based on role\n        const destination = responseData.user.role === 'admin' \n          ? '/admin/dashboard' \n          : '/';\n        \n        navigate(destination);\n      } else {\n        setErrorMessage(responseData.message || 'Login failed. Please check your credentials.');\n      }\n    } catch (error) {\n      setErrorMessage('Cannot connect to server. Please try again later.');\n    }\n  };\n\n  // const loginUser = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:8002/api/auth/login', {\n  //       method: 'POST',\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       },\n  //       body: JSON.stringify({ email, password }),\n  //     });\n\n  //     const responseData = await response.json();\n\n  //     if (response.ok) {\n  //       localStorage.setItem('user', JSON.stringify(responseData));\n  //       setSuccessMessage(\"Login successful!\");\n  //       setErrorMessage('');\n        \n  //       // Redirect based on user role\n  //       const { role } = responseData.user;\n  //       navigate(role === 'admin' ? '/admin/dashboard' : '/');\n        \n  //     } else {\n  //       // Handle errors from backend\n  //       setErrorMessage(responseData.message || 'Authentication failed');\n  //       setSuccessMessage('');\n  //     }\n  //   } catch (error) {\n  //     setErrorMessage('Network error. Please try again.');\n  //     setSuccessMessage('');\n  //   }\n  // };\n\n  return (\n    <div className=\"main-login-page\">\n      <div className=\"login-page\">\n        <h2>Login</h2>\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n        <div className=\"main-login-input-page\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"form-control inputBox\"\n            placeholder=\"Enter email\"\n            required\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"form-control inputBox\"\n            placeholder=\"Enter Password\"\n            required\n          />\n        </div>\n\n        <button onClick={loginUser} className=\"btn btn-primary\">\n          Login\n        </button>\n\n        <div className=\"login-links\">\n          <Link to=\"/forgot-password\">Forgot password?</Link>\n          <Link to=\"/register\">Create account</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}