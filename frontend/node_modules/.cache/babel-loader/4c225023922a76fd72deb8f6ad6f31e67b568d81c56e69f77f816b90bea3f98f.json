{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/pages/blogDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogDetails = () => {\n  _s();\n  const [blogDetails, setBlogDetails] = useState(null);\n  const [copyText, setCopyText] = useState(\"Copy Code\"); // State to control the button text\n  const {\n    id\n  } = useParams();\n  const {\n    title\n  } = useParams();\n  const fetchData = useCallback(async () => {\n    try {\n      const showAllBlog = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n      if (!showAllBlog.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      const result = await showAllBlog.json();\n      setBlogDetails(result);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [title]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      setCopyText(\"Copied!\");\n      setTimeout(() => setCopyText(\"Copy Code\"), 2500);\n    });\n  };\n  if (!blogDetails) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-blog-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: blogDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-details-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000/${blogDetails.image}`,\n        alt: blogDetails === null || blogDetails === void 0 ? void 0 : blogDetails.title,\n        className: \"portfolio-project-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-copy\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(blogDetails.content),\n          className: \"copy-button\",\n          children: copyText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: blogDetails.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogDetails, \"+ShbBVbYYX1d1ry3uXmMrE2JnUY=\", false, function () {\n  return [useParams, useParams];\n});\n_c = BlogDetails;\nexport default BlogDetails;\nvar _c;\n$RefreshReg$(_c, \"BlogDetails\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","jsxDEV","_jsxDEV","BlogDetails","_s","blogDetails","setBlogDetails","copyText","setCopyText","id","title","fetchData","showAllBlog","fetch","ok","Error","result","json","error","console","copyToClipboard","text","navigator","clipboard","writeText","then","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","image","alt","onClick","content","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/pages/blogDetails.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nconst BlogDetails = () => {\n  const [blogDetails, setBlogDetails] = useState(null);\n  const [copyText, setCopyText] = useState(\"Copy Code\");  // State to control the button text\n  const { id } = useParams();\n  const { title } = useParams();\n  const fetchData = useCallback(async () => {\n    try {\n      const showAllBlog = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n      if (!showAllBlog.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      const result = await showAllBlog.json();\n      setBlogDetails(result);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [title]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        setCopyText(\"Copied!\");  \n        setTimeout(() => setCopyText(\"Copy Code\"), 2500);\n      },\n    );\n  };\n  if (!blogDetails) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <div className=\"main-blog-details\">\n      <h2>{blogDetails.title}</h2>\n      <div className=\"portfolio-details-image\">\n        <img\n          src={`http://localhost:8000/${blogDetails.image}`}\n          alt={blogDetails?.title}\n          className=\"portfolio-project-image\"\n        />\n        <div className=\"code-copy\">\n        <button\n            onClick={() => copyToClipboard(blogDetails.content)}\n            className=\"copy-button\"\n          >{copyText} \n          </button>\n          <pre>{blogDetails.content}</pre>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BlogDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}