{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/authtask/frontend/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\n// import ReCAPTCHA from 'react-google-recaptcha'; // Import ReCAPTCHA\nimport '../assets/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [captchaValue, setCaptchaValue] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const loginUser = async () => {\n    try {\n      const result = await fetch('http://localhost:8002/api/auth/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (result.ok) {\n        const data = await result.json();\n        localStorage.setItem('user', JSON.stringify(data));\n        setSuccessMessage(\"Login successfully!\");\n        setEmail('');\n        setPassword('');\n      } else {\n        const errorData = await result.json();\n        setErrorMessage(errorData.message || 'Incorrect email or password');\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 28\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-login-input-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"form-control inputBox\",\n          placeholder: \"Enter email or username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"form-control inputBox\",\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: loginUser,\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgot-password\",\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ei++RZpqaQIxLEhQ/NMlWwHOdcI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","successMessage","setSuccessMessage","errorMessage","setErrorMessage","navigate","loginUser","result","fetch","method","body","JSON","stringify","headers","ok","data","json","localStorage","setItem","errorData","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\n// import ReCAPTCHA from 'react-google-recaptcha'; // Import ReCAPTCHA\nimport '../assets/login.css';\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [captchaValue, setCaptchaValue] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const loginUser = async () => {\n      try {\n      const result = await fetch('http://localhost:8002/api/auth/login', {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if(result.ok) {\n        const data = await result.json();\n        localStorage.setItem('user', JSON.stringify(data));\n        setSuccessMessage(\"Login successfully!\");\n        setEmail('');\n        setPassword('');\n      }else {\n        const errorData = await result.json();\n        setErrorMessage(errorData.message || 'Incorrect email or password');\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred. Please try again.');\n    }\n  };\n  return (\n    <div className=\"main-login-page\">\n      <div className=\"login-page\">\n        <h2>Login</h2>\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        <div className=\"main-login-input-page\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"form-control inputBox\"\n            placeholder=\"Enter email or username\"\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"form-control inputBox\"\n            placeholder=\"Enter Password\"\n          />\n        </div>\n        <button\n          type=\"submit\"\n          onClick={loginUser}\n          className=\"btn btn-primary\"\n        >\n          Login\n        </button>\n        <Link to=\"/forgot-password\">Forgot your password?</Link>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}