{"ast":null,"code":"const fetchUserProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\"); // Get token from storage\n    console.log(\"Retrieved Token:\", token); // Debugging log\n\n    if (!token) {\n      setError(\"Unauthorized. Please log in.\");\n      return;\n    }\n    const response = await fetch(\"http://localhost:8002/api/profile\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        // Ensure token format is correct\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(\"API Response:\", data); // Debugging log\n\n    if (response.ok) {\n      setUser(data.profile);\n    } else {\n      setError(data.message || \"Failed to load profile.\");\n    }\n  } catch (err) {\n    console.error(\"Fetch Error:\", err);\n    setError(\"Error fetching profile.\");\n  }\n};","map":{"version":3,"names":["fetchUserProfile","token","localStorage","getItem","console","log","setError","response","fetch","method","headers","data","json","ok","setUser","profile","message","err","error"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/src/components/UserProfile.jsx"],"sourcesContent":["const fetchUserProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\"); // Get token from storage\n    console.log(\"Retrieved Token:\", token); // Debugging log\n\n    if (!token) {\n      setError(\"Unauthorized. Please log in.\");\n      return;\n    }\n\n    const response = await fetch(\"http://localhost:8002/api/profile\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`, // Ensure token format is correct\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await response.json();\n    console.log(\"API Response:\", data); // Debugging log\n\n    if (response.ok) {\n      setUser(data.profile);\n    } else {\n      setError(data.message || \"Failed to load profile.\");\n    }\n  } catch (err) {\n    console.error(\"Fetch Error:\", err);\n    setError(\"Error fetching profile.\");\n  }\n};\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,KAAK,CAAC,CAAC,CAAC;;IAExC,IAAI,CAACA,KAAK,EAAE;MACVK,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACF;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUT,KAAK,EAAE;QAAE;QACpC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEM,IAAI,CAAC,CAAC,CAAC;;IAEpC,IAAIJ,QAAQ,CAACM,EAAE,EAAE;MACfC,OAAO,CAACH,IAAI,CAACI,OAAO,CAAC;IACvB,CAAC,MAAM;MACLT,QAAQ,CAACK,IAAI,CAACK,OAAO,IAAI,yBAAyB,CAAC;IACrD;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZb,OAAO,CAACc,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC;IAClCX,QAAQ,CAAC,yBAAyB,CAAC;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}