{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/pages/blogDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogDetails = () => {\n  _s();\n  const [blogDetails, setBlogDetails] = useState(null);\n  const [copyText, setCopyText] = useState(\"Copy Code\"); // State to control the button text\n  const {\n    title\n  } = useParams(); // Extract 'title' from route parameters\n\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      const result = await response.json();\n      setBlogDetails(result);\n    } catch (error) {\n      console.error(\"Error fetching blog details:\", error);\n    }\n  }, [title]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      setCopyText(\"Copied!\");\n      setTimeout(() => setCopyText(\"Copy Code\"), 2500); // Reset button text after 2.5 seconds\n    });\n  };\n  if (!blogDetails) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // Show a loading message while data is being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-blog-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: blogDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-details-image\",\n      children: [blogDetails.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000/${blogDetails.image}`,\n        alt: blogDetails.title || \"Blog Image\",\n        className: \"portfolio-project-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-copy\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(blogDetails.content),\n          className: \"copy-button\",\n          \"aria-label\": \"Copy blog content to clipboard\",\n          children: copyText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: blogDetails.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogDetails, \"Bbh0E53mhmGTsh501RUlyBNTWJU=\", false, function () {\n  return [useParams];\n});\n_c = BlogDetails;\nexport default BlogDetails;\n\n// import React, { useState, useEffect, useCallback } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// const BlogDetails = () => {\n//   const [blogDetails, setBlogDetails] = useState(null);\n//   const [copyText, setCopyText] = useState(\"Copy Code\");  // State to control the button text\n//   // const { id } = useParams();\n//   const { title } = useParams();\n//   const fetchData = useCallback(async () => {\n//     try {\n//       const showAllBlog = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n//       if (!showAllBlog.ok) {\n//         throw new Error(\"Failed to fetch data\");\n//       }\n//       const result = await showAllBlog.json();\n//       setBlogDetails(result);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }, [title]);\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n//   const copyToClipboard = (text) => {\n//     navigator.clipboard.writeText(text).then(\n//       () => {\n//         setCopyText(\"Copied!\");  \n//         setTimeout(() => setCopyText(\"Copy Code\"), 2500);\n//       },\n//     );\n//   };\n//   if (!blogDetails) {\n//     return <p>Loading...</p>;\n//   }\n//   return (\n//     <div className=\"main-blog-details\">\n//       <h2>{blogDetails.title}</h2>\n//       <div className=\"portfolio-details-image\">\n//         <img\n//           src={`http://localhost:8000/${blogDetails.image}`}\n//           alt={blogDetails?.title}\n//           className=\"portfolio-project-image\"\n//         />\n//         <div className=\"code-copy\">\n//         <button\n//             onClick={() => copyToClipboard(blogDetails.content)}\n//             className=\"copy-button\"\n//           >{copyText} \n//           </button>\n//           <pre>{blogDetails.content}</pre>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default BlogDetails;\nvar _c;\n$RefreshReg$(_c, \"BlogDetails\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","jsxDEV","_jsxDEV","BlogDetails","_s","blogDetails","setBlogDetails","copyText","setCopyText","title","fetchData","response","fetch","ok","Error","result","json","error","console","copyToClipboard","text","navigator","clipboard","writeText","then","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","image","src","alt","onClick","content","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/pages/blogDetails.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst BlogDetails = () => {\n  const [blogDetails, setBlogDetails] = useState(null);\n  const [copyText, setCopyText] = useState(\"Copy Code\"); // State to control the button text\n  const { title } = useParams(); // Extract 'title' from route parameters\n\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      const result = await response.json();\n      setBlogDetails(result);\n    } catch (error) {\n      console.error(\"Error fetching blog details:\", error);\n    }\n  }, [title]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text).then(() => {\n      setCopyText(\"Copied!\");\n      setTimeout(() => setCopyText(\"Copy Code\"), 2500); // Reset button text after 2.5 seconds\n    });\n  };\n\n  if (!blogDetails) {\n    return <p>Loading...</p>; // Show a loading message while data is being fetched\n  }\n\n  return (\n    <div className=\"main-blog-details\">\n      <h2>{blogDetails.title}</h2>\n      <div className=\"portfolio-details-image\">\n        {blogDetails.image && (\n          <img\n            src={`http://localhost:8000/${blogDetails.image}`}\n            alt={blogDetails.title || \"Blog Image\"}\n            className=\"portfolio-project-image\"\n          />\n        )}\n        <div className=\"code-copy\">\n          <button\n            onClick={() => copyToClipboard(blogDetails.content)}\n            className=\"copy-button\"\n            aria-label=\"Copy blog content to clipboard\"\n          >\n            {copyText}\n          </button>\n          <pre>{blogDetails.content}</pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogDetails;\n\n\n\n\n// import React, { useState, useEffect, useCallback } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// const BlogDetails = () => {\n//   const [blogDetails, setBlogDetails] = useState(null);\n//   const [copyText, setCopyText] = useState(\"Copy Code\");  // State to control the button text\n//   // const { id } = useParams();\n//   const { title } = useParams();\n//   const fetchData = useCallback(async () => {\n//     try {\n//       const showAllBlog = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n//       if (!showAllBlog.ok) {\n//         throw new Error(\"Failed to fetch data\");\n//       }\n//       const result = await showAllBlog.json();\n//       setBlogDetails(result);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }, [title]);\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n//   const copyToClipboard = (text) => {\n//     navigator.clipboard.writeText(text).then(\n//       () => {\n//         setCopyText(\"Copied!\");  \n//         setTimeout(() => setCopyText(\"Copy Code\"), 2500);\n//       },\n//     );\n//   };\n//   if (!blogDetails) {\n//     return <p>Loading...</p>;\n//   }\n//   return (\n//     <div className=\"main-blog-details\">\n//       <h2>{blogDetails.title}</h2>\n//       <div className=\"portfolio-details-image\">\n//         <img\n//           src={`http://localhost:8000/${blogDetails.image}`}\n//           alt={blogDetails?.title}\n//           className=\"portfolio-project-image\"\n//         />\n//         <div className=\"code-copy\">\n//         <button\n//             onClick={() => copyToClipboard(blogDetails.content)}\n//             className=\"copy-button\"\n//           >{copyText} \n//           </button>\n//           <pre>{blogDetails.content}</pre>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default BlogDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}