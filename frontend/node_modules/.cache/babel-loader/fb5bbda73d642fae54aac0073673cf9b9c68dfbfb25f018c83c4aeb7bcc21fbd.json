{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport './assets/contact.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n  const {\n    token\n  } = useParams(); // Use useParams to capture the token from URL params\n\n  // Handle password change\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  // Handle confirm password change\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  // Handle password reset\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8000/api/resetPassword?token=${token}`, {\n        password\n      });\n      setSuccess(response.data.message);\n      setError('');\n      setTimeout(() => {\n        navigate('/login'); // Redirect to login page after success\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.message : 'Server error');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: handleConfirmPasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"/44ZrXWFLnraoT6l0CATaEqS1Ps=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","navigate","token","handlePasswordChange","e","target","value","handleConfirmPasswordChange","handleSubmit","preventDefault","response","post","data","message","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx"],"sourcesContent":["import './assets/contact.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n  const { token } = useParams(); // Use useParams to capture the token from URL params\n\n  // Handle password change\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  // Handle confirm password change\n  const handleConfirmPasswordChange = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  // Handle password reset\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/resetPassword?token=${token}`,\n        { password }\n      );\n      setSuccess(response.data.message);\n      setError('');\n      setTimeout(() => {\n        navigate('/login'); // Redirect to login page after success\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.message : 'Server error');\n      setSuccess('');\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <h2>Reset Password</h2>\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"password\">New Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={handleConfirmPasswordChange}\n            required\n          />\n        </div>\n        <button type=\"submit\">Reset Password</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}