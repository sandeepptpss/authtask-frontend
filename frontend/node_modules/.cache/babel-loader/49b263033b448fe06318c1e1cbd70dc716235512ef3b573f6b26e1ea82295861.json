{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Link, useNavigate } from 'react-router-dom';\n// import '../assets/login.css';\n\n// const Login = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const loginUser = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8002/api/auth/login', {\n//         method: 'POST',\n//         headers: {\n//           \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       const responseData = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('user', JSON.stringify(responseData));\n//         setSuccessMessage(\"Login successful!\");\n//         setErrorMessage('');\n\n//         // Redirect based on user role\n//         const { role } = responseData.user;\n//         navigate(role === 'admin' ? '/admin/dashboard' : '/');\n\n//       } else {\n//         // Handle errors from backend\n//         setErrorMessage(responseData.message || 'Authentication failed');\n//         setSuccessMessage('');\n//       }\n//     } catch (error) {\n//       setErrorMessage('Network error. Please try again.');\n//       setSuccessMessage('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-login-page\">\n//       <div className=\"login-page\">\n//         <h2>Login</h2>\n//         {successMessage && <div className=\"success-message\">{successMessage}</div>}\n//         {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n//         <div className=\"main-login-input-page\">\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             className=\"form-control inputBox\"\n//             placeholder=\"Enter email\"\n//             required\n//           />\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             className=\"form-control inputBox\"\n//             placeholder=\"Enter Password\"\n//             required\n//           />\n//         </div>\n\n//         <button onClick={loginUser} className=\"btn btn-primary\">\n//           Login\n//         </button>\n\n//         <div className=\"login-links\">\n//           <Link to=\"/forgot-password\">Forgot password?</Link>\n//           <Link to=\"/register\">Create account</Link>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/src/components/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { Link, useNavigate } from 'react-router-dom';\n// import '../assets/login.css';\n\n// const Login = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const loginUser = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8002/api/auth/login', {\n//         method: 'POST',\n//         headers: {\n//           \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       const responseData = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('user', JSON.stringify(responseData));\n//         setSuccessMessage(\"Login successful!\");\n//         setErrorMessage('');\n        \n//         // Redirect based on user role\n//         const { role } = responseData.user;\n//         navigate(role === 'admin' ? '/admin/dashboard' : '/');\n        \n//       } else {\n//         // Handle errors from backend\n//         setErrorMessage(responseData.message || 'Authentication failed');\n//         setSuccessMessage('');\n//       }\n//     } catch (error) {\n//       setErrorMessage('Network error. Please try again.');\n//       setSuccessMessage('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-login-page\">\n//       <div className=\"login-page\">\n//         <h2>Login</h2>\n//         {successMessage && <div className=\"success-message\">{successMessage}</div>}\n//         {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n//         <div className=\"main-login-input-page\">\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             className=\"form-control inputBox\"\n//             placeholder=\"Enter email\"\n//             required\n//           />\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             className=\"form-control inputBox\"\n//             placeholder=\"Enter Password\"\n//             required\n//           />\n//         </div>\n\n//         <button onClick={loginUser} className=\"btn btn-primary\">\n//           Login\n//         </button>\n\n//         <div className=\"login-links\">\n//           <Link to=\"/forgot-password\">Forgot password?</Link>\n//           <Link to=\"/register\">Create account</Link>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}