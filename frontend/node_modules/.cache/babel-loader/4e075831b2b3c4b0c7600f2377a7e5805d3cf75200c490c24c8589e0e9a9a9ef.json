{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport './assets/resetpassword.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordPage = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const PasswordReset = async () => {\n    try {\n      const result = await fetch(\"http://localhost:8000/api/contact/add\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name,\n          email,\n          messages\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (result.ok) {\n        setSuccessMessage(\"Your message has been sent successfully!\");\n        setName('');\n        setEmail('');\n        setMessage('');\n      } else if (result.status === 400) {\n        setSuccessMessage(\"Email is required.\");\n      } else {\n        setSuccessMessage(\"There was an error sending your message. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setSuccessMessage(\"An error occurred. Please try again later.\");\n    }\n  };\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setMessage(''); // Reset message before sending a new request\n    if (!resetPasswordToken) {\n      setMessage('Reset password token is missing.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/api/resetPassword/${resetPasswordToken}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      console.log(response, 'hello response');\n      // Log the response content, not the token\n      const responseData = await response.json();\n      console.log(responseData);\n      if (response.status === 200) {\n        setSuccessMessage(\"Password reset successful\");\n        setPassword('');\n      } else {\n        setMessage(responseData.message || 'An error occurred while resetting the password.');\n      }\n    } catch (error) {\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: PasswordReset,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control inputBox\",\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPasswordPage, \"2cnOxgPXCvLU+BLgLurKn1EBK1I=\");\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPasswordPage","_s","password","setPassword","successMessage","setSuccessMessage","PasswordReset","result","fetch","method","body","JSON","stringify","name","email","messages","headers","ok","setName","setEmail","setMessage","status","error","console","handlePasswordReset","e","preventDefault","resetPasswordToken","response","log","responseData","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx"],"sourcesContent":["import './assets/resetpassword.css';\nimport React, { useState } from 'react';\n\nconst ResetPasswordPage = () => {\n  const [password, setPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n\n  const PasswordReset = async () => {\n    try {\n        const result = await fetch(\"http://localhost:8000/api/contact/add\", {\n            method: \"POST\",\n            body: JSON.stringify({ name, email, messages }),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n        if (result.ok) {\n            setSuccessMessage(\"Your message has been sent successfully!\");\n            setName(''); \n            setEmail('');\n            setMessage('');\n        } else if(result.status === 400) {\n            setSuccessMessage(\"Email is required.\");\n        }else{\n       setSuccessMessage(\"There was an error sending your message. Please try again.\");\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n        setSuccessMessage(\"An error occurred. Please try again later.\");\n    }\n};\n\n\n\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault();\n    setMessage(''); // Reset message before sending a new request\n    if (!resetPasswordToken) {\n      setMessage('Reset password token is missing.');\n      return;\n    }\n    \n    try {\n      const response = await fetch(`http://localhost:8000/api/resetPassword/${resetPasswordToken}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password }), \n      });\nconsole.log(response , 'hello response')\n      // Log the response content, not the token\n      const responseData = await response.json();\n      console.log(responseData);\n\n      if (response.status === 200) { \n        setSuccessMessage(\"Password reset successful\");\n        setPassword('');\n      } else {\n        setMessage(responseData.message || 'An error occurred while resetting the password.');\n      }\n    } catch (error) {\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n\n  return (\n    <div className='reset-password'>\n      <h2>Reset Password</h2>\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n      {message && <p className=\"error-message\">{message}</p>}\n\n      <form onSubmit={PasswordReset}> {/* Use onSubmit for the form */}\n        <input\n          className='form-control inputBox'\n          type=\"password\"\n          placeholder=\"New Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Reset Password</button> {/* Remove onClick here */}\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}