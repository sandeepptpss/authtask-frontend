{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport './assets/resetpassword.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const token = searchParams.get('token');\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8000/api/resetPassword?token=${token}`, {\n        password\n      });\n      console.log({\n        token\n      }, 'Token sent for password reset');\n      setSuccess(response.data.message);\n      setError('');\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.message : 'Server error');\n      setSuccess('');\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const toggleConfirmPasswordVisibility = () => {\n    setConfirmPasswordVisible(!confirmPasswordVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset account password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: passwordVisible ? 'text' : 'password',\n          id: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          required: true,\n          placeholder: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"toggle-visibility\",\n          onClick: togglePasswordVisibility,\n          children: passwordVisible ? 'Hide' : 'Show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: confirmPasswordVisible ? 'text' : 'password',\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: handleConfirmPasswordChange,\n          required: true,\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"toggle-visibility\",\n          onClick: toggleConfirmPasswordVisibility,\n          children: confirmPasswordVisible ? 'Hide' : 'Show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-resetpassword\",\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"rbF9YKGvwbiizkoZGtYS1GxF2h4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","passwordVisible","setPasswordVisible","confirmPasswordVisible","setConfirmPasswordVisible","error","setError","success","setSuccess","navigate","location","searchParams","URLSearchParams","search","token","get","handlePasswordChange","e","target","value","handleConfirmPasswordChange","handleSubmit","preventDefault","response","post","console","log","data","message","setTimeout","togglePasswordVisibility","toggleConfirmPasswordVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","onChange","required","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx"],"sourcesContent":["import './assets/resetpassword.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const token = searchParams.get('token');\n  \n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  const handleConfirmPasswordChange = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/resetPassword?token=${token}`,\n        { password }\n      );\n      console.log({ token }, 'Token sent for password reset');\n      setSuccess(response.data.message);\n      setError('');\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.message : 'Server error');\n      setSuccess('');\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setConfirmPasswordVisible(!confirmPasswordVisible);\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <h2>Reset account password</h2>\n      <p>Enter a new password</p>\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n      <form onSubmit={handleSubmit} className=\"reset-password-form\">\n        <div className=\"form-input\">\n          <input\n            type={passwordVisible ? 'text' : 'password'}\n            id=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            required\n            placeholder=\"New Password\"\n          />\n          <button\n            type=\"button\"\n            className=\"toggle-visibility\"\n            onClick={togglePasswordVisibility}\n          >\n            {passwordVisible ? 'Hide' : 'Show'}\n          </button>\n        </div>\n        <div className=\"form-input\">\n          <input\n            type={confirmPasswordVisible ? 'text' : 'password'}\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={handleConfirmPasswordChange}\n            required\n            placeholder=\"Confirm Password\"\n          />\n          <button\n            type=\"button\"\n            className=\"toggle-visibility\"\n            onClick={toggleConfirmPasswordVisibility}\n          >\n            {confirmPasswordVisible ? 'Hide' : 'Show'}\n          </button>\n        </div>\n        <button className=\"submit-resetpassword\" type=\"submit\">\n          Reset Password\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}