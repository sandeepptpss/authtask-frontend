{"ast":null,"code":"// import React, { useState, useEffect, useCallback } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// const BlogDetails = () => {\n//   const [blogDetails, setBlogDetails] = useState(null);\n//   const [copyText, setCopyText] = useState(\"Copy Code\");  // State to control the button text\n//   // const { id } = useParams();\n//   const { title } = useParams();\n//   const fetchData = useCallback(async () => {\n//     try {\n//       const showAllBlog = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n//       if (!showAllBlog.ok) {\n//         throw new Error(\"Failed to fetch data\");\n//       }\n//       const result = await showAllBlog.json();\n//       setBlogDetails(result);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }, [title]);\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n//   const copyToClipboard = (text) => {\n//     navigator.clipboard.writeText(text).then(\n//       () => {\n//         setCopyText(\"Copied!\");  \n//         setTimeout(() => setCopyText(\"Copy Code\"), 2500);\n//       },\n//     );\n//   };\n//   if (!blogDetails) {\n//     return <p>Loading...</p>;\n//   }\n//   return (\n//     <div className=\"main-blog-details\">\n//       <h2>{blogDetails.title}</h2>\n//       <div className=\"portfolio-details-image\">\n//         <img\n//           src={`http://localhost:8000/${blogDetails.image}`}\n//           alt={blogDetails?.title}\n//           className=\"portfolio-project-image\"\n//         />\n//         <div className=\"code-copy\">\n//         <button\n//             onClick={() => copyToClipboard(blogDetails.content)}\n//             className=\"copy-button\"\n//           >{copyText} \n//           </button>\n//           <pre>{blogDetails.content}</pre>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default BlogDetails;","map":{"version":3,"names":[],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/pages/blogDetails.jsx"],"sourcesContent":["// import React, { useState, useEffect, useCallback } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// const BlogDetails = () => {\n//   const [blogDetails, setBlogDetails] = useState(null);\n//   const [copyText, setCopyText] = useState(\"Copy Code\");  // State to control the button text\n//   // const { id } = useParams();\n//   const { title } = useParams();\n//   const fetchData = useCallback(async () => {\n//     try {\n//       const showAllBlog = await fetch(`http://localhost:8000/api/get-blog/${title}`);\n//       if (!showAllBlog.ok) {\n//         throw new Error(\"Failed to fetch data\");\n//       }\n//       const result = await showAllBlog.json();\n//       setBlogDetails(result);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }, [title]);\n//   useEffect(() => {\n//     fetchData();\n//   }, [fetchData]);\n//   const copyToClipboard = (text) => {\n//     navigator.clipboard.writeText(text).then(\n//       () => {\n//         setCopyText(\"Copied!\");  \n//         setTimeout(() => setCopyText(\"Copy Code\"), 2500);\n//       },\n//     );\n//   };\n//   if (!blogDetails) {\n//     return <p>Loading...</p>;\n//   }\n//   return (\n//     <div className=\"main-blog-details\">\n//       <h2>{blogDetails.title}</h2>\n//       <div className=\"portfolio-details-image\">\n//         <img\n//           src={`http://localhost:8000/${blogDetails.image}`}\n//           alt={blogDetails?.title}\n//           className=\"portfolio-project-image\"\n//         />\n//         <div className=\"code-copy\">\n//         <button\n//             onClick={() => copyToClipboard(blogDetails.content)}\n//             className=\"copy-button\"\n//           >{copyText} \n//           </button>\n//           <pre>{blogDetails.content}</pre>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default BlogDetails;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}