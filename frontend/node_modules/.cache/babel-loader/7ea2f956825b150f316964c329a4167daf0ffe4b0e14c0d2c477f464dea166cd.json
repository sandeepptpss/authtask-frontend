{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport './assets/resetpassword.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordPage = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [resetPasswordToken] = useState('');\n  useEffect(() => {\n    if (!resetPasswordToken) {\n      setMessage('Reset password token is missing.');\n    }\n  }, [resetPasswordToken]);\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setMessage(''); // Reset message before sending a new request\n    if (!resetPasswordToken) {\n      setMessage('Reset password token is missing.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/api/resetPassword/${resetPasswordToken}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      console.log(resetPasswordToken);\n      if (response.status === 200) {\n        setSuccessMessage(\"Password reset successful\");\n        setPassword('');\n      } else {\n        const errorData = await response.json();\n        setMessage(errorData.message || 'An error occurred while resetting the password.');\n      }\n    } catch (error) {\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 26\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control inputBox\",\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPasswordPage, \"NAI7pWTQyMgCoIaqfKK2haSO+6Q=\");\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ResetPasswordPage","_s","password","setPassword","message","setMessage","successMessage","setSuccessMessage","resetPasswordToken","handlePasswordReset","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","console","log","status","errorData","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx"],"sourcesContent":["import './assets/resetpassword.css';\nimport React, { useState, useEffect } from 'react';\nconst ResetPasswordPage = () => {\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [resetPasswordToken ] = useState('');\n\n  useEffect(() => {\n    if (!resetPasswordToken) {\n      setMessage('Reset password token is missing.');\n    }\n  },\n   [resetPasswordToken]);\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault();\n    setMessage(''); // Reset message before sending a new request\n    if (!resetPasswordToken) {\n      setMessage('Reset password token is missing.');\n      return;\n    }\n    \n    try {\n      const response = await fetch(`http://localhost:8000/api/resetPassword/${resetPasswordToken}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password }), \n      });\nconsole.log(resetPasswordToken)\n      if (response.status === 200) { \n        setSuccessMessage(\"Password reset successful\");\n        setPassword('');\n      } else {\n        const errorData = await response.json();\n        setMessage(errorData.message || 'An error occurred while resetting the password.');\n      }\n    } catch (error) {\n      setMessage('An error occurred while resetting the password.');\n    }\n  };\n\n  return (\n    <div className='reset-password'>\n      <h2>Reset Password</h2>\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n      {message && <p className=\"error-message\">{message}</p>}\n      <form onSubmit={handlePasswordReset}>\n        <input\n          className='form-control inputBox'\n          type=\"password\"\n          placeholder=\"New Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Reset Password</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}