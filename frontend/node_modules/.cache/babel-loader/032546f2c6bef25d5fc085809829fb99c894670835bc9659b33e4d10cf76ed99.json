{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\n// ResetPassword.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  match\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const history = useHistory();\n\n  // Get token from the URL params\n  const {\n    token\n  } = match.params;\n\n  // Handle password change\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  // Handle confirm password change\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  // Handle password reset\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8000/api/resetPassword?token=${token}`, {\n        password\n      });\n      setSuccess(response.data.message);\n      setError('');\n      setTimeout(() => {\n        history.push('/login'); // Redirect to login page after success\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.message : 'Server error');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: handleConfirmPasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"nlt8+gAooBIoPM6l+KDmShsMGms=\", false, function () {\n  return [useHistory];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","useHistory","jsxDEV","_jsxDEV","ResetPassword","match","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","history","token","params","handlePasswordChange","e","target","value","handleConfirmPasswordChange","handleSubmit","preventDefault","response","post","data","message","setTimeout","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx"],"sourcesContent":["// ResetPassword.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst ResetPassword = ({ match }) => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const history = useHistory();\n\n  // Get token from the URL params\n  const { token } = match.params;\n\n  // Handle password change\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  // Handle confirm password change\n  const handleConfirmPasswordChange = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  // Handle password reset\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/resetPassword?token=${token}`,\n        { password }\n      );\n      setSuccess(response.data.message);\n      setError('');\n      setTimeout(() => {\n        history.push('/login'); // Redirect to login page after success\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.message : 'Server error');\n      setSuccess('');\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <h2>Reset Password</h2>\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"password\">New Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={handleConfirmPasswordChange}\n            required\n          />\n        </div>\n        <button type=\"submit\">Reset Password</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}