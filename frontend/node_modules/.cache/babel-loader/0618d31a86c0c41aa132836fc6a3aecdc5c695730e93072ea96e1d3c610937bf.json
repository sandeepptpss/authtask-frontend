{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n\n    // Simple validation\n    if (!password || !confirmPassword) {\n      setError('Both fields are required.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    try {\n      setIsSubmitting(true);\n      // Extract token from URL query params\n      const urlParams = new URLSearchParams(window.location.search);\n      const token = urlParams.get('token');\n      if (!token) {\n        setError('Invalid or missing token.');\n        return;\n      }\n\n      // API request to reset password\n      const response = await axios.post('http://localhost:8000/api/resetPassword', {\n        password\n      }, {\n        params: {\n          token\n        }\n      });\n      console.log('Response:', response.data);\n      setMessage(response.data.message || 'Password reset successful.');\n    } catch (err) {\n      console.error('Error details:', err);\n      if (err.response) {\n        setError(err.response.data.message || 'Server error occurred.');\n      } else if (err.request) {\n        setError('No response from server.');\n      } else {\n        setError('Unexpected error occurred.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '50px auto',\n      padding: '20px',\n      border: '1px solid #ccc',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          style: {\n            width: '100%',\n            padding: '10px',\n            boxSizing: 'border-box'\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          style: {\n            width: '100%',\n            padding: '10px',\n            boxSizing: 'border-box'\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#28a745',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: isSubmitting ? 'Resetting...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"L1wkk1oMn2hQqzViddbh7MYArCc=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","isSubmitting","setIsSubmitting","handleSubmit","e","preventDefault","urlParams","URLSearchParams","window","location","search","token","get","response","post","params","console","log","data","err","request","style","maxWidth","margin","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","marginBottom","htmlFor","display","type","id","value","onChange","target","width","boxSizing","required","disabled","backgroundColor","cursor","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/newproject/frontend/src/components/ResetPasswordPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n\n    // Simple validation\n    if (!password || !confirmPassword) {\n      setError('Both fields are required.');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n\n    try {\n      setIsSubmitting(true);\n      // Extract token from URL query params\n      const urlParams = new URLSearchParams(window.location.search);\n      const token = urlParams.get('token');\n\n      if (!token) {\n        setError('Invalid or missing token.');\n        return;\n      }\n\n      // API request to reset password\n      const response = await axios.post(\n        'http://localhost:8000/api/resetPassword', \n        { password }, \n        { params: { token } }\n      );\n      console.log('Response:', response.data);\n\n      setMessage(response.data.message || 'Password reset successful.');\n    } catch (err) {\n      console.error('Error details:', err);\n      if (err.response) {\n        setError(err.response.data.message || 'Server error occurred.');\n      } else if (err.request) {\n        setError('No response from server.');\n      } else {\n        setError('Unexpected error occurred.');\n      }\n    }    \n  };\n\n  return (\n    <div style={{ maxWidth: '400px', margin: '50px auto', padding: '20px', border: '1px solid #ccc', borderRadius: '8px' }}>\n      <h2>Reset Password</h2>\n      {message && <p style={{ color: 'green' }}>{message}</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: '15px' }}>\n          <label htmlFor=\"password\" style={{ display: 'block', marginBottom: '5px' }}>New Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            style={{ width: '100%', padding: '10px', boxSizing: 'border-box' }}\n            required\n          />\n        </div>\n        <div style={{ marginBottom: '15px' }}>\n          <label htmlFor=\"confirmPassword\" style={{ display: 'block', marginBottom: '5px' }}>Confirm Password</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            style={{ width: '100%', padding: '10px', boxSizing: 'border-box' }}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          style={{ padding: '10px 20px', backgroundColor: '#28a745', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}\n        >\n          {isSubmitting ? 'Resetting...' : 'Reset Password'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}